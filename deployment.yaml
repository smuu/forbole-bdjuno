---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: explorer-database
  namespace: robusta-3
spec:
  resources:
    requests:
      storage: 50Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-yaml
  namespace: robusta-3
data:
  config.yaml: |
    chain:
      bech32_prefix: celestia
      modules:
      - modules
      - messages
      # - auth
      - bank
      - consensus
      - gov
      - mint
      # - pricefeed
      - slashing
      - staking
      - distribution
      - actions
      # - history
    node:
      type: remote
      config:
        rpc:
          client_name: juno
          address: http://consensus-full-1.robusta-3.svc.cluster.local:26657
          max_connections: 20
        grpc:
          address: consensus-full-1.robusta-3.svc.cluster.local:9090
          insecure: true
    parsing:
        workers: 1
        start_height: 1
        average_block_time: 5s
        listen_new_blocks: true
        parse_old_blocks: true
        parse_genesis: true
    database:
        url: postgresql://user:password@localhost:5432/bdjuno?sslmode=disable&search_path=public
        max_open_connections: 1
        max_idle_connections: 1
        partition_size: 100000
        partition_batch: 1000
    logging:
        level: info
        format: text
    actions:
        host: 127.0.0.1
        port: 3000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: explorer
  name: explorer
  namespace: robusta-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: explorer
  serviceName: explorer
  template:
    metadata:
      labels:
        app: explorer
    spec:
      containers:
      - image: docker.io/postgres:15.2-alpine3.17
        name: postgres
        env:
        - name: POSTGRES_DB
          value: bdjuno
        - name: POSTGRES_USER
          value: user
        - name: POSTGRES_PASSWORD
          value: password
        ports:
          - containerPort: 5432
        volumeMounts:
        - name: explorer-database
          mountPath: /var/lib/postgresql/data
          subPath: data
        resources: {}
      - image: ttl.sh/343bbce0-32a8-4964-987e-8d410da928b4:latest
        name: forbole-bdjuno
        imagePullPolicy: Always
        command: [ "bdjuno", "start" ]
        # command: [ "sleep", "infinity" ]
        volumeMounts:
        - name: config-yaml
          mountPath: /root/.bdjuno/config.yaml
          subPath: config.yaml
        resources: {}
      - image: hasura/graphql-engine:v2.22.1
        name: hasura
        ports:
        - containerPort: 8080
        env:
        - name: HASURA_GRAPHQL_DATABASE_URL
          value: postgres://user:password@postgres:5432/bdjuno
          ## postgres database to store Hasura metadata
        - name: HASURA_GRAPHQL_METADATA_DATABASE_URL
          value: postgres://postgres:postgrespassword@postgres:5432/postgres
          ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
        - name: PG_DATABASE_URL
          value: postgresql://user:password@host.docker.internal:5432/bdjuno
          ## enable the console served by server
        - name: HASURA_GRAPHQL_ENABLE_CONSOLE
          value: "true" # set to "false" to disable console
          ## enable debugging mode. It is recommended to disable this in production
        - name: HASURA_GRAPHQL_DEV_MODE
          value: "true"
        - name: HASURA_GRAPHQL_ENABLED_LOG_TYPES
          value: startup, http-log, webhook-log, websocket-log, query-log
          # uncomment next line to run console offline (i.e load console assets from server instead of CDN)
        # - name: HASURA_GRAPHQL_CONSOLE_ASSETS_DIR
        #   value: /srv/console-assets
        #   # uncomment next line to set an admin secret
        # - name: HASURA_GRAPHQL_ADMIN_SECRET
        #   value: myadminsecretkey
        resources: {}
      volumes:
      - name: explorer-database
        persistentVolumeClaim:
          claimName: explorer-database
      - name: config-yaml
        configMap:
          name: config-yaml
